version: "3"

services:
  db:
    image: circleci/postgres:10-postgis
    environment:
      POSTGRES_USER: defaultuser
      POSTGRES_DB: testdb
      POSTGRES_PASSWORD: testpassword
  
  db_for_read:
    image: circleci/postgres:10-postgis
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: database
      POSTGRES_PASSWORD: asdfsa

  dev:
    build:
      context: .
      dockerfile: ./Dockerfile-dev
    command: >
      bash -c "python manage.py makemigrations --no-input
      && python manage.py migrate
      && python manage.py loaddata coordenacao_regional.yaml
      && python manage.py loaddata terras_indigenas.yaml
      && python manage.py loaddata user.yaml
      && python manage.py loaddata support.yaml
      && python manage.py loaddata support_layerfilter.yaml
      && python manage.py loaddata urgent_alerts.yaml
      && python manage.py loaddata monitoring_consolidated_stats.yaml
      && python manage.py loaddata monitoring_priority_consolidated.yaml
      && python manage.py loaddata land_use_ti.yaml
      && python manage.py loaddata land_use_classes.yaml
      && python manage.py loaddata documental_docs_action.yaml
      && python manage.py loaddata documental_users_who_registered.yaml
      && python manage.py loaddata documental_docs.yaml
      && python manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/app/
    ports:
      - "8080:8080"
    environment:
      DB_USER: defaultuser
      DB_NAME: testdb
      DB_PASSWORD: testpassword
      DB_HOST: db
      DB_USER_FOR_READ: user
      DB_NAME_FOR_READ: database
      DB_PASSWORD_FOR_READ: asdfsa
      DB_HOST_FOR_READ: db_for_read
      PORT: 8080
    depends_on:
      - db
      - db_for_read

  test:
    build:
      context: .
      dockerfile: ./Dockerfile-dev
    command: >
      bash -c "python manage.py makemigrations --no-input
      && python manage.py test"
    volumes:
      - .:/app/
    ports:
      - "8080:8080"
    environment:
      DB_USER: defaultuser
      DB_NAME: testdb
      DB_PASSWORD: testpassword
      DB_HOST: db
      PORT: 8080
    depends_on:
      - db

  prod:
    image: us.gcr.io/custom-plating-209314/cmr2_api:latest
    build: .
